<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alps.pf.mapper.PfLogicMapper">
    
    <resultMap type="PfLogic" id="PfLogicResult">
        <result property="logicId"    column="logic_id"    />
        <result property="logicUrl"    column="logic_url"    />
        <result property="urlInput"    column="url_input"    />
        <result property="urlOutput"    column="url_output"    />
        <result property="urlTransport"    column="url_transport"    />
        <result property="logicGroup"    column="logic_group"    />
        <result property="logicName"    column="logic_name"    />
        <result property="logicDesc"    column="logic_desc"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>
	
	<sql id="selectPfLogicVo">
        select logic_id, logic_url, url_input, url_output, url_transport, logic_group, logic_name, logic_desc, create_by, create_time, update_by, update_time from pf_logic
    </sql>
	
    <select id="selectPfLogicList" parameterType="PfLogic" resultMap="PfLogicResult">
        <include refid="selectPfLogicVo"/>
        <where>  
            <if test="logicId != null  and logicId != '' "> and logic_id = #{logicId}</if>
             <if test="logicUrl != null  and logicUrl != '' "> and logic_url = #{logicUrl}</if>
             <if test="urlInput != null  and urlInput != '' "> and url_input = #{urlInput}</if>
             <if test="urlOutput != null  and urlOutput != '' "> and url_output = #{urlOutput}</if>
             <if test="urlTransport != null  and urlTransport != '' "> and url_transport = #{urlTransport}</if>
             <if test="logicGroup != null  and logicGroup != '' "> and logic_group = #{logicGroup}</if>
             <if test="logicName != null  and logicName != '' "> and logic_name = #{logicName}</if>
             <if test="logicDesc != null  and logicDesc != '' "> and logic_desc = #{logicDesc}</if>
             <if test="createBy != null  and createBy != '' "> and create_by = #{createBy}</if>
             <if test="createTime != null "> and create_time = #{createTime}</if>
             <if test="updateBy != null  and updateBy != '' "> and update_by = #{updateBy}</if>
             <if test="updateTime != null "> and update_time = #{updateTime}</if>
         </where>
    </select>
    
    <select id="selectPfLogicById" parameterType="String" resultMap="PfLogicResult">
        <include refid="selectPfLogicVo"/>
        where logic_id = #{logicId}
    </select>
        
    <insert id="insertPfLogic" parameterType="PfLogic">
        insert into pf_logic
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="logicId != null  and logicId != ''  ">logic_id,</if>
			<if test="logicUrl != null  and logicUrl != ''  ">logic_url,</if>
			<if test="urlInput != null  and urlInput != ''  ">url_input,</if>
			<if test="urlOutput != null  and urlOutput != ''  ">url_output,</if>
			<if test="urlTransport != null  and urlTransport != ''  ">url_transport,</if>
			<if test="logicGroup != null  and logicGroup != ''  ">logic_group,</if>
			<if test="logicName != null  and logicName != ''  ">logic_name,</if>
			<if test="logicDesc != null  and logicDesc != ''  ">logic_desc,</if>
			<if test="createBy != null  and createBy != ''  ">create_by,</if>
			<if test="createTime != null  ">create_time,</if>
			<if test="updateBy != null  and updateBy != ''  ">update_by,</if>
			<if test="updateTime != null  ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="logicId != null  and logicId != ''  ">#{logicId},</if>
			<if test="logicUrl != null  and logicUrl != ''  ">#{logicUrl},</if>
			<if test="urlInput != null  and urlInput != ''  ">#{urlInput},</if>
			<if test="urlOutput != null  and urlOutput != ''  ">#{urlOutput},</if>
			<if test="urlTransport != null  and urlTransport != ''  ">#{urlTransport},</if>
			<if test="logicGroup != null  and logicGroup != ''  ">#{logicGroup},</if>
			<if test="logicName != null  and logicName != ''  ">#{logicName},</if>
			<if test="logicDesc != null  and logicDesc != ''  ">#{logicDesc},</if>
			<if test="createBy != null  and createBy != ''  ">#{createBy},</if>
			<if test="createTime != null  ">#{createTime},</if>
			<if test="updateBy != null  and updateBy != ''  ">#{updateBy},</if>
			<if test="updateTime != null  ">#{updateTime},</if>
         </trim>
    </insert>
	 
    <update id="updatePfLogic" parameterType="PfLogic">
        update pf_logic
        <trim prefix="SET" suffixOverrides=",">
            <if test="logicUrl != null  and logicUrl != ''  ">logic_url = #{logicUrl},</if>
            <if test="urlInput != null  and urlInput != ''  ">url_input = #{urlInput},</if>
            <if test="urlOutput != null  and urlOutput != ''  ">url_output = #{urlOutput},</if>
            <if test="urlTransport != null  and urlTransport != ''  ">url_transport = #{urlTransport},</if>
            <if test="logicGroup != null  and logicGroup != ''  ">logic_group = #{logicGroup},</if>
            <if test="logicName != null  and logicName != ''  ">logic_name = #{logicName},</if>
            <if test="logicDesc != null  and logicDesc != ''  ">logic_desc = #{logicDesc},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
        </trim>
        where logic_id = #{logicId}
    </update>

	<delete id="deletePfLogicById" parameterType="String">
        delete from pf_logic where logic_id = #{logicId}
    </delete>
	
    <delete id="deletePfLogicByIds" parameterType="String">
        delete from pf_logic where logic_id in 
        <foreach item="logicId" collection="array" open="(" separator="," close=")">
            #{logicId}
        </foreach>
    </delete>
    
</mapper>