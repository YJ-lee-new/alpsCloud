<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alps.oauth.uaa.client.web.mapper.SysMenuMapper">
    <resultMap id="BaseResultMap" type="com.alps.base.api.model.entity.SysMenu">
        <id column="menu_id" property="menuId" jdbcType="BIGINT"/>
        <result column="menu_id" property="menuId" jdbcType="INTEGER"/>
        <result column="menu_code" property="menuCode" jdbcType="VARCHAR"/>
        <result column="menu_name" property="menuName" jdbcType="VARCHAR"/>
        <result column="component" property="component" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="api_id" property="apiId" jdbcType="BIGINT"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="scheme" property="scheme" jdbcType="VARCHAR"/>
        <result column="target" property="target" jdbcType="VARCHAR"/>
        <result column="order_num" property="orderNum" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="service_id" jdbcType="TIMESTAMP" property="serviceId"/>
        <result property="createBy"    column="create_by" jdbcType="VARCHAR"   />
        <result property="updateBy"    column="update_by"   jdbcType="VARCHAR" />
    </resultMap>



    <sql id="selectMenuVo">
        SELECT menu_id, parent_id, menu_name,menu_code,api_id, order_num, url, menu_type,  icon, scheme,service_id,status,target,is_frame,create_time,component
		from sys_menu
    </sql>

    <select id="selectMenuList" parameterType="SysMenu" resultMap="BaseResultMap">
        <include refid="selectMenuVo"/>
        <where>
            <if test="menuName != null and menuName != ''">
                AND menu_name like concat('%', #{menuName}, '%')
            </if>
        </where>
        order by parent_id, order_num
    </select>
    
    <select id="selectActionMenuList" parameterType="Long" resultMap="BaseResultMap">
        <include refid="selectMenuVo"/>
        where  menu_type  = 'A' and m.status = 1
           <if test="companyId != null and companyId != ''">
             and  menu_id and  = #{menuId}
          </if>
    </select>

    <select id="selectMenuTree" resultMap="BaseResultMap">
		select distinct m.menu_id, m.parent_id, m.menu_name,menu_code,api_id,  m.url, m.component, m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m where m.menu_type in ('C', 'M') and m.status = 1
		order by m.parent_id, m.order_num
	</select>
	
	    <select id="selectMenuTreeAll" resultMap="BaseResultMap">
		select distinct m.menu_id, m.parent_id, m.menu_name,menu_code,api_id,  m.url, m.component, m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m where m.status = 1
		order by m.parent_id, m.order_num
	</select>

    <select id="selectMenuTreeByUserId" parameterType="map" resultMap="BaseResultMap">
		select distinct m.menu_id, m.parent_id, m.menu_name, menu_code,api_id, m.url, m.component, m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu m
			 left join sys_role_menu rm on m.menu_id = rm.menu_id
			 left join sys_user_role ur on rm.role_id = ur.role_id
			 left join sys_role ro on ur.role_id = ro.role_id
			 left join sys_user u on ur.user_id = u.user_id
		where u.account = #{account} and m.menu_type in ('M', 'C') and m.status = 1  AND ro.status = 1
	      <if test="companyId != null and companyId != ''">
                and  ro.company_id = #{companyId}
         </if>
		order by m.parent_id, m.order_num
	</select>

    <select id="selectMenuListByRoleId" parameterType="Long" resultType="Integer">
		select m.menu_id, m.parent_id
		from sys_menu m
            left join sys_role_menu rm on m.menu_id = rm.menu_id
        where rm.role_id = #{roleId}
        	and m.menu_id not in (select m.parent_id from sys_menu m inner join sys_role_menu rm on m.menu_id = rm.menu_id and rm.role_id = #{roleId})
		order by m.parent_id, m.order_num
	</select>


    <select id="selectMenuById" parameterType="Long" resultMap="BaseResultMap">
       SELECT t.menu_id, t.parent_id,t.api_id,t.menu_name, t.order_num, menu_code,api_id, t.url, t.menu_type,  t.icon, t.scheme,t.service_id,t.status,t.target,t.is_frame,
			(SELECT menu_name FROM sys_menu WHERE menu_id = t.parent_id) parent_name
		FROM sys_menu t
		where t.menu_id = #{menuId}
    </select>

    <select id="hasChildByMenuId" resultType="Integer">
	    select count(1) from sys_menu where parent_id = #{menuId}
	</select>

    <select id="checkMenuNameUnique" parameterType="SysMenu" resultMap="BaseResultMap">
        <include refid="selectMenuVo"/>
        where menu_name=#{menuName} and parent_id = #{parentId}
    </select>

    <update id="updateMenu" parameterType="SysMenu">
        update sys_menu
        <set>
            <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
            <if test="menuCode != null and menuCode != ''">menu_code = #{menuCode},</if>
            <if test="apiId != null and apiId != ''">api_id = #{apiId},</if>
            <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="url != null and url != ''">url = #{url},</if>
            <if test="component != null and component != ''">component = #{component},</if>
            <if test="isFrame != null and isFrame != ''">is_frame = #{isFrame},</if>
            <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
            <if test="status != null">status = #{status},</if>
            <if test="icon !=null and icon != ''">icon = #{icon},</if>
            <if test="scheme != null and scheme != ''">scheme = #{scheme},</if>
            <if test="serviceId != null and serviceId != ''">service_id = #{serviceId},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where menu_id = #{menuId}
    </update>

    <insert id="insertMenu" parameterType="SysMenu">
        insert into sys_menu(
        <if test="menuId != null and menuId != 0">menu_id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="menuName != null and menuName != ''">menu_name,</if>
        <if test="menuCode != null and menuCode != ''">menu_code,</if>
        <if test="apiId != null and apiId != ''">api_id,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="url != null and url != ''">url,</if>
        <if test="component != null and component != ''">component,</if>
        <if test="isFrame != null and isFrame != ''">is_frame,</if>
        <if test="menuType != null and menuType != ''">menu_type,</if>
        <if test="status != null">status,</if>
        <if test="icon != null and icon != ''">icon,</if>
        <if test="scheme != null and scheme != ''">scheme,</if>
        <if test="serviceId != null and serviceId != ''">service_id,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="menuId != null and menuId != 0">#{menuId},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="menuName != null and menuName != ''">#{menuName},</if>
        <if test="menuCode != null and menuCode != ''">#{menuCode},</if>
        <if test="apiId != null and apiId != ''">#{apiId},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="url != null and url != ''">#{url},</if>
        <if test="component != null and component != ''">#{component},</if>
        <if test="isFrame != null and isFrame != ''">#{isFrame},</if>
        <if test="menuType != null and menuType != ''">#{menuType},</if>
        <if test="status != null">#{status},</if>
        <if test="icon != null and icon != ''">#{icon},</if>
        <if test="scheme != null and scheme != ''">#{scheme},</if>
        <if test="serviceId != null and serviceId != ''">#{serviceId},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <delete id="deleteMenuById" parameterType="Long">
	    delete from sys_menu where menu_id = #{menuId}
	</delete>
	
	<select id="selectMenuTreeByCompanyId" parameterType="map" resultMap="BaseResultMap">
		select distinct m.menu_id, m.parent_id, m.menu_name, menu_code,api_id,m.url, m.component,  m.is_frame, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_user a,sys_user_role c,sys_role b,sys_aciton_ref d,sys_menu m
		where a.user_id = c.user_id
			and c.role_id = b.role_id
			and b.company_id = d.company_id
			and b.role_id = d.role_id
			and d.menu_id = m.menu_id
			and b.company_id = #{companyId}
			and a.account = #{userId}
			and m.menu_type in ('M', 'C') and m.status = 1  AND b.status = 1
		order by m.parent_id, m.order_num
	
	</select>
	
	
	<select id="selectMenuTree" parameterType="map" resultMap="BaseResultMap">
		select DISTINCT d.*
		from  sys_user a, sys_user_role b, sys_role_menu c,sys_menu d,sys_role e
	    where  a.user_id = b.user_id
	    and b.role_id = c.role_id
	    and c.menu_id = d.menu_id
	    and b.role_id = e.role_id
	     <if test="companyId != null and companyId != ''">
                and  e.company_id = #{companyId}
         </if>
	    
		and d.menu_type in ('M', 'C') and d.status = 1
		order by d.parent_id, d.order_num
	</select>
	
	<select id="selectMenuPathById" parameterType="Long"  resultMap="BaseResultMap">
		SELECT menu_id, parent_id, menu_name,menu_code,api_id, order_num, (SELECT  b.path  FROM sys_api b where b.api_id = a.api_id) url, menu_type,  icon, scheme,service_id,status,target,is_frame,create_time,component
		from sys_menu a
        where  a.menu_Id = #{menuId}
        AND a.`status`= 1
	</select>
	

</mapper>
